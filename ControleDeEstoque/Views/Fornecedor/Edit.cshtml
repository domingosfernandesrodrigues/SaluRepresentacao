@model ControleDeEstoque.ViewModels.FornecedorViewModel

@{
    ViewBag.Title = "Fornecedor";
}

<h2>Editar cadastro do fornecedor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<fieldset>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FornecedorId)

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Nome)
            <div>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Sobrenome)
            <div>
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.RazaoSocial)
            <div>
                @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Cnpj)
            <div>
                @Html.EditorFor(model => model.Cnpj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cnpj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.CEP)
            <div>
                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Endereco)
            <div>
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Bairro)
            <div>
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Fone)
            <div>
                @Html.EditorFor(model => model.Fone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Celular)
            <div>
                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Email)
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.EndNumero)
            <div>
                @Html.EditorFor(model => model.EndNumero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndNumero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Cidade)
            <div>
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Estado)
            <div>
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12 form-group pull-right">
            <div class="col-md-offset-8 ">
                <input type="submit" value="Editar" class="btn btn-default" />
            </div>
        </div>
    </div>
</fieldset>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
