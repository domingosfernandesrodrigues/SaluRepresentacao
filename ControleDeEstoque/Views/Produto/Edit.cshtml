@model ControleDeEstoque.ViewModels.ProdutoViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<fieldset>
    <div class="form-horizontal">
        <h4>Editar produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProdutoId)

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Nome)
            <div>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Descricao)
            <div>
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Foto)
            <div>
                @Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.ValorPago)
            <div>
                @Html.EditorFor(model => model.ValorPago, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.ValorVenda)
            <div>
                @Html.EditorFor(model => model.ValorVenda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.Qtde)
            <div>
                @Html.EditorFor(model => model.Qtde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Qtde, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.UnidadeMedidaId)
            <div>
                @Html.DropDownListFor(model => model.UnidadeMedidaId, ViewBag.UnidadeMedida as SelectList, "Selecione...", new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.UnidadeMedidaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.CategoriaId)
            <div>
                @Html.DropDownListFor(model => model.CategoriaId, ViewBag.Categoria as SelectList, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 form-group">
            @Html.LabelFor(model => model.SubCategoriaId)
            <div>
                @Html.DropDownListFor(model => model.SubCategoriaId, ViewBag.SubCategoria as SelectList, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SubCategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12 form-group pull-right">
            <div class="col-md-offset-7">
                <input type="submit" value="Editar" class="btn btn-default" />
            </div>
        </div>
    </div>
</fieldset>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
